

# #GET basic student
# basic student same as before
# as usual we can use ?filter=fieldname=fieldvalue
# for example: http://127.0.0.1:8000/api/stdntbasicinfo/?filter=first_name=Lucy
# can also use ?latest=true to get the most latest data http://127.0.0.1:8000/api/stdntbasicinfo/?latest=true
# can nest ?latest=true to filter to get the latest data that is filtered http://127.0.0.1:8000/api/stdntbasicinfo/?latest=true&filter=first_name=Lucy
GET http://127.0.0.1:8000/api/stdntbasicinfo/

### GET Full student
## can use filter but in a more comprehensive way

#####Example1 filter: using 1 filter argument which is `id` 
## you can use `?filter=id=1` to get all the rows and 
## models inside `Full Student Data` that have a field that is `id` and is equal to `1`

##### example2 filer: using model as a filter argument to get all the data on that model
## you can use `?filter=personal_data` to get all the data in `personal_data` model


#####example3 filter: using 2 filter argument which is the `model` and the `id`
## you can use `?filter=personal_data=f_name=Jane` with this you can get all the data in personal_data with the
## first name `Jane`

GET https://djangoportal-backends.onrender.com/api/class-list

### GET campus to get all the students detail on that campus use ?filter=campus=1
### to get the students data(personaldata, family background, acadmemic background etc)
### choices are personal_data, add_personal_data, family_background, academic_background, academic_history
### use ?filter=campus=personal_data=1 to get all personaldata at campus 1
GET http://127.0.0.1:8000/api/full-student-data/?filter=basicdata_applicant_id=1




### POST basic student
POST http://127.0.0.1:8000/api/stdntbasicinfo/
Content-Type: application/json

{
    "first_name": "Mhafric",
    "middle_name": "",
    "last_name": "Magalso",
    "is_transferee": "True",
    "contact_number": "09111111111",
    "year_level": "2nd Year",
    "address": "Somewhere around the earth",
    "campus": 1,
    "program": 1,
    "birth_date": "2000-01-01",
    "sex": "Male",
    "email": "grayravennpc2@gmail.com"
}

### POST onsiteFull student
POST https://djangoportal-backends.onrender.com/api/onsite-full-student-data/
Content-Type: application/json

{
  "student_id": "2024-35615",
  "campus": 1,
  "personal_data": {
    "f_name": "asdzzzx",
    "m_name": "Mazz",
    "l_name": "as2321dddh",
    "suffix": "Jr",
    "sex": "Male",
    "birth_date": "2000-05-15",
    "birth_place": "New York City",
    "marital_status": "Single",
    "religion": "Christian",
    "country": "USA",
    "email": "s1zx3e@gmail.com",
    "on_site": true,
    "acr": "ACR123456",
    "status": "pending"
  },
  "add_personal_data": {
    "city_address": "123 Main St, Metro City",
    "province_address": "456 County Road, State Province",
    "contact_number": "+1234567890",
    "city_contact_number": "+1234567891",
    "province_contact_number": "+1234567892",
    "citizenship": "American"
  },
  "family_background": {
    "father_fname": "Robert",
    "father_mname": "James",
    "father_lname": "Smith",
    "father_contact_number": "+1234567893",
    "father_email": "robert.smith@example.com",
    "father_occupation": "Engineer",
    "father_income": 75000,
    "father_company": "Tech Corp",
    "mother_fname": "Mary",
    "mother_mname": "Anne",
    "mother_lname": "Smith",
    "mother_contact_number": "+1234567894",
    "mother_email": "mary.smith@example.com",
    "mother_occupation": "Teacher",
    "mother_income": "65000",
    "mother_company": "Local School District",
    "guardian_fname": "William",
    "guardian_mname": "Henry",
    "guardian_lname": "Johnson",
    "guardian_relation": "Uncle",
    "guardian_contact_number": "+1234567895",
    "guardian_email": "william.johnson@example.com"
  },
  "academic_background": {
    "program": 1,
    "major_in": null,
    "student_type": "Transferee",
    "semester_entry": 1,
    "year_entry": 2024,
    "year_level": "First Year",
    "year_graduate": 2028,
    "application_type": "Undergraduate"
  },
  "academic_history": {
    "elementary_school": "Springfield Elementary",
    "elementary_address": "789 Elementary Ave, Springfield",
    "elementary_honors": "With Honors",
    "elementary_graduate": 2012,
    "junior_highschool": "Springfield Junior High",
    "junior_address": "101 Junior High St, Springfield",
    "junior_honors": "First Honors",
    "junior_graduate": 2016,
    "senior_highschool": "Springfield Senior High",
    "senior_address": "202 Senior High Rd, Springfield",
    "senior_honors": "Valedictorian",
    "senior_graduate": 2022,
    "ncae_grade": "95",
    "ncae_year_taken": 2022,
    "latest_college": null,
    "college_address": null,
    "college_honors": null,
    "program": null
  }
}


### POST Full student
POST http://127.0.0.1:8000/api/full-student-data/
Content-Type: application/json

{
    "personal_data": {
        "basicdata_applicant_id": 12,
        "f_name": "Mhafric",
        "m_name": "",
        "suffix": "",
        "l_name": "Magalso",
        "sex": "Male",
        "birth_date": "2000-01-01",
        "birth_place": "New York",
        "marital_status": "Single",
        "religion": "Christian",
        "country": "USA",
        "email": "shinygluttontuna@gmail.com",
        "acr": "123456",
        "status": "initially enrolled"
    },
    "add_personal_data": {
        "city_address": "123 Main St",
        "province_address": "NY",
        "contact_number": "1234567890",
        "city_contact_number": "0987654321",
        "province_contact_number": "1122334455",
        "citizenship": "American"
    },
    "family_background": {
        "father_fname": "Robert",
        "father_mname": "Michael",
        "father_lname": "Smith",
        "father_contact_number": "1234567890",
        "father_email": "robert.smith@example.com",
        "father_occupation": "Engineer",
        "father_income": 80000,
        "father_company": "ABC Corp",
        "mother_fname": "Mary",
        "mother_mname": "Ann",
        "mother_lname": "Smith",
        "mother_contact_number": "0987654321",
        "mother_email": "mary.smith@example.com",
        "mother_occupation": "Doctor",
        "mother_income": 95000,
        "mother_company": "XYZ Clinic",
        "guardian_fname": "Alice",
        "guardian_mname": "B.",
        "guardian_lname": "Johnson",
        "guardian_relation": "Aunt",
        "guardian_contact_number": "4567891230",
        "guardian_email": "alice.johnson@example.com"
    },
    "academic_background": {
        "program": 1,
        "major_in": "Computer Science",
        "student_type": "Undergraduate",
        "semester_entry": 1,
        "year_level":"Fourth Year",
        "year_entry": 2023,
        "year_graduate": 2027,
        "application_type": "old"
    },
    "academic_history": {
        "elementary_address": "Elementary St, City",
        "elementary_honors": "Valedictorian",
        "elementary_graduate": 2012,
        "junior_highschool": "XYZ Junior High",
        "junior_address": "Junior High St, City",
        "junior_honors": "Honors",
        "junior_graduate": 2015,
        "senior_highschool": "LMN Senior High",
        "senior_address": "Senior High St, City",
        "senior_honors": "Graduated with Honors",
        "senior_graduate": 2018,
        "ncae_grade": "95",
        "ncae_year_taken": 2018,
        "latest_college": "Best College",
        "college_address": "College St, City",
        "college_honors": "Cum Laude",
        "program": "Bachelor of Science in Information Technology"
    }
}

### POST additional personal data student
POST http://127.0.0.1:8000/api/add-personal-data/
Content-Type: application/json

{
    "fulldata_applicant_id": 2,
    "city_address": "123 Main St",
    "province_address": "Nz",
    "contact_number": "qwe",
    "city_contact_number": "0987654321",
    "province_contact_number": "1122334455",
    "citizenship": "American"
}
### POST Official student
POST https://node-mysql-signup-verification-api.onrender.com/students/external/add-enrollment
Content-Type: application/json

{
    "semester_id" : 9,
    "fulldata_applicant_id": 55
}


### PUT personal data(for editing student status)
# choices are pending, initially enrolled, rejected, officially enrolled

PUT http://127.0.0.1:8000/api/deactivate_or_modify_stdntacademicbackground/9/False
Content-Type: application/json

{
    "semester_entry": 8
}



### Login to get token (if needed)
POST http://127.0.0.1:8000/api/enlisted-students/
Content-Type: application/json

{
    "semester_id" : 5,
    "fulldata_applicant_id": 1
}

### Delete Single Document
DELETE http://127.0.0.1:8000/api/documents/123/
Authorization: Bearer your_jwt_token_here
Content-Type: application/json

### Delete All Documents for Current User
DELETE http://127.0.0.1:8000/api/delete/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMwODExMzA0LCJpYXQiOjE3MzA4MTEwMDQsImp0aSI6Ijk0NzI4NTM3NTVlOTQwN2M4MjNkZWQzODNkNmMyNDNjIiwidXNlcl9pZCI6MjF9.Pyt2ZeqUt6FMJfubVjF1x4va4Q51YVksacYnG_lJkM8
Content-Type: application/json

### Example with environment variables (create a .env file)
@baseUrl = http://127.0.0.1:8000
@token = your_jwt_token_here

### Delete Single Document (using env variables)
DELETE {{baseUrl}}/api/documents/123/
Authorization: Bearer {{token}}
Content-Type: application/json

### Delete All Documents (using env variables)
DELETE {{baseUrl}}/api/documents/
Authorization: Bearer {{token}}
Content-Type: application/json


### Enlist student
POST https://node-mysql-signup-verification-api.onrender.com/enrollment/external/submit-enlistment
Content-Type: application/json

{
    "fulldata_applicant_id":11,
    "class_ids":[1,2,3,4]
}

### GET REQUEST
GET https://node-mysql-signup-verification-api.onrender.com/prospectus/external/get-all-prospectus-subjects


### Enlist student
POST http://127.0.0.1:8000/api/registrar-message
Content-Type: application/json

{
    "fulldata_applicant_id":1,
    "message": "bubu ka"
}